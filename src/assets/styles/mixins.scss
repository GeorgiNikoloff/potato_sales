@import 'variables';

@mixin size($width, $height) {
  width: $width;
  height: $height;
}

@mixin square($size) {
  @include size($size, $size);
}

@mixin font($size: false, $lh: false, $color: false, $fontFamily: false, $align: false, $weight: false, $style: false) {
  @if $size {
    font-size: $size;
  }
  @if $lh {
    line-height: $lh;
  }
  @if $color {
    color: $color;
  }
  @if $fontFamily {
    font-family: $fontFamily;
  }
  @if $align {
    text-align: $align;
  }
  @if $weight {
    font-weight: $weight;
  }
  @if $style {
    font-style: $style;
  }
}

@mixin position($position, $args) {
  @each $o in top right bottom left {
    $i: index($args, $o);
    @if $i and $i + 1 <= length($args) and type-of(nth($args, $i + 1)) == number {
      #{$o}: nth($args, $i + 1);
    }
  }
  position: $position;
}

@mixin absolute($args: '') {
  @include position(absolute, $args);
}

@mixin fixed($args: '') {
  @include position(fixed, $args);
}

@mixin relative($args: '') {
  @include position(relative, $args);
}

@mixin static($args: '') {
  @include position(static, $args);
}

@mixin box-shadow($params...) {
  -webkit-box-shadow: $params;
  -moz-box-shadow: $params;
  box-shadow: $params;
}

@mixin transition($transition) {
  -webkit-transition: $transition;
  -moz-transition: $transition;
  -ms-transition: $transition;
  -o-transition: $transition;
}

@mixin transform($transforms) {
  -moz-transform: $transforms;
  -o-transform: $transforms;
  -ms-transform: $transforms;
  -webkit-transform: $transforms;
  transform: $transforms;
}

@mixin border-radius($radius: 3px) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
}

@mixin border-radiuses($topright: 0, $bottomright: 0, $bottomleft: 0, $topleft: 0) {
  -webkit-border-top-right-radius: $topright;
  -webkit-border-bottom-right-radius: $bottomright;
  -webkit-border-bottom-left-radius: $bottomleft;
  -webkit-border-top-left-radius: $topleft;
  -moz-border-radius-topright: $topright;
  -moz-border-radius-bottomright: $bottomright;
  -moz-border-radius-bottomleft: $bottomleft;
  -moz-border-radius-topleft: $topleft;
  border-top-right-radius: $topright;
  border-bottom-right-radius: $bottomright;
  border-bottom-left-radius: $bottomleft;
  border-top-left-radius: $topleft;
}

@mixin background-opacity($color, $opacity: 0.9) {
  background: $color; /* The Fallback */
  background: rgba($color, $opacity);
}

@mixin placeholder() {
  $selector: '';
  $prefixes: (
          moz: '::-moz',
          webkit: '::-webkit',
          ie: ':-ms',
  );
  @each $prop, $value in $prefixes {
    @if $prop != 'moz' {
      $selector: #{$value}-input-placeholder;
    } @else {
      $selector: #{$value}-placeholder;
    }
    @if & {
      &#{$selector} {
        @content;
      }
    } @else {
      #{$selector} {
        @content;
      }
    }
  }
  &::placeholder {
    @content;
  }
}

@mixin item-style($color) {
  ul.tabs li.active a,
  .bg-white {
    border-top: 3px solid $color;
  }
  h5 {
    color: $color;
  }
  .tab-panel .item-status {
    background: $color;
  }
  .svg-button .item-action__svg {
    fill: $color;
  }
}

@mixin itemStatusColors() {
  &.found {
    background: $found;
  }
  &.suggested {
    background: $suggested;
  }
  &.lost {
    background: $lost;
  }
  &.returned {
    background: $returned;
  }
  &.awaiting-collection {
    background: $awaiting-collection;
  }
  &.to-be-posted {
    background: $to-be-posted;
  }
  &.checkout-paid-posted {
    background: $checkout-paid-posted;
  }
  &.expired {
    background: $expired;
  }
  &.review {
    background: $review;
  }
  &.matched {
    background: $matched;
  }
  &.matches {
    background: $potential-matches;
  }
}

@mixin itemColor() {
  &.found {
    color: $found;
  }
  &.suggested {
    color: $suggested;
  }
  &.lost {
    color: $lost;
  }
  &.returned {
    color: $returned;
  }
  &.awaiting-collection {
    color: $awaiting-collection;
  }
  &.to-be-posted {
    color: $to-be-posted;
  }
  &.checkout-paid-posted {
    color: $checkout-paid-posted;
  }
  &.expired {
    color: $expired;
  }
  &.review {
    color: $review;
  }
  &.matched {
    color: $matched;
  }
  &.matches {
    color: $potential-matches;
  }
}

@mixin ellipsis() {
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}

@mixin item-title($font-size, $line-height, $margin-top) {
  h5 {
    @include font($font-size, $line-height, false, $font-family, false, bold);
    @include ellipsis();
    @include itemColor();
    margin-top: $margin-top;
    max-width: 400px;
    @media (max-width: 1500px) {
      max-width: 300px;
    }
  }
  .info {
    @include font($font-size - 4, $line-height, $card-gray, $font-family);
    max-height: 40px;
    margin: 0 0 3px 0;
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
  }
}

@mixin rotate($deg) {
  -webkit-transform: rotate($deg);
  -moz-transform: rotate($deg);
  -ms-transform: rotate($deg);
  -o-transform: rotate($deg);
  transform: rotate($deg);
}

@mixin item-details() {
  .item-table-details {
    display: table;
    margin-top: 5px;
    width: 100%;
    .table-row {
      display: table-row;
      > div {
        @include font(11px, 16px, $text-color, $font-family);
        display: table-cell;
        padding: 5px 0;
        &.title {
          @include ellipsis();
          color: $silver;
          &.padding-left-10 {
            padding-left: 12px;
          }
        }
      }
    }
  }
}

@mixin dateRange($width, $margin) {
  .date-range {
    width: $width;
    margin: $margin;
    overflow: hidden;
    border: 1px solid $silver-border;
    @include border-radius(5px);
    input {
      @include size(100%, 26px);
      @include font(12px, 17px, $text-color, $font-family);
      border-color: transparent;
      padding: 3px 8px;
      background: $white;
      float: left;
    }
    span {
      width: 16%;
      border-right: 1px solid $gray-light;
      border-left: 1px solid $gray-light;
      @include font(14px, 26px, $text-color, $font-family, center);
      float: left;
    }
  }
}

